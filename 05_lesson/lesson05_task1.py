from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options


def test_blue_button():
    print("=== –¢–ï–°–¢ SELENIUM ===")

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Chrome –¥–ª—è –æ–±—Ö–æ–¥–∞ SSL
    chrome_options = Options()
    chrome_options.add_argument("--ignore-certificate-errors")
    chrome_options.add_argument("--ignore-ssl-errors")
    chrome_options.add_argument("--disable-web-security")
    chrome_options.add_argument("--allow-running-insecure-content")
    chrome_options.add_argument("--disable-extensions")
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--disable-dev-shm-usage")

    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ ChromeDriver
    service = Service(ChromeDriverManager().install())
    driver = webdriver.Chrome(service=service, options=chrome_options)

    try:
        print("1. –û—Ç–∫—Ä—ã–≤–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...")
        driver.get("http://uitestingplayground.com/classattr")
        print(f"2. –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {driver.title}")
        print(f"3. URL: {driver.current_url}")

        # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        import time
        time.sleep(3)

        print("4. –ü—Ä–æ–≤–µ—Ä—è—é —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")

        # –ü–æ—Å–º–æ—Ç—Ä–∏–º —á—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å
        page_source = driver.page_source
        print(f"5. –†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {len(page_source)} —Å–∏–º–≤–æ–ª–æ–≤")

        if "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞" in driver.title:
            print("‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å –∏–∑-–∑–∞ SSL –æ—à–∏–±–∫–∏")
            print("–ü–æ–ø—Ä–æ–±—É—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å HTTPS...")
            driver.get("https://uitestingplayground.com/classattr")
            time.sleep(3)

        print(f"6. –ù–æ–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫: {driver.title}")
        print(f"7. –ù–æ–≤—ã–π URL: {driver.current_url}")

        # –ò—â–µ–º –∫–Ω–æ–ø–∫—É
        print("8. –ò—â—É —Å–∏–Ω—é—é –∫–Ω–æ–ø–∫—É...")

        # –†–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–∏—Å–∫–∞ –∫–Ω–æ–ø–∫–∏
        try:
            # –°–ø–æ—Å–æ–± 1: –ü–æ –∫–ª–∞—Å—Å—É
            blue_button = driver.find_element(By.CLASS_NAME, "btn-primary")
            print("‚úì –ù–∞—à–µ–ª –∫–Ω–æ–ø–∫—É –ø–æ CLASS_NAME")
        except:
            try:
                # –°–ø–æ—Å–æ–± 2: –ü–æ XPath
                blue_button = driver.find_element(By.XPATH, "//button[contains(@class, 'btn-primary')]")
                print("‚úì –ù–∞—à–µ–ª –∫–Ω–æ–ø–∫—É –ø–æ XPATH")
            except:
                try:
                    # –°–ø–æ—Å–æ–± 3: –ü–æ —Ç–µ–∫—Å—Ç—É
                    blue_button = driver.find_element(By.XPATH, "//button[contains(text(), 'Button')]")
                    print("‚úì –ù–∞—à–µ–ª –∫–Ω–æ–ø–∫—É –ø–æ —Ç–µ–∫—Å—Ç—É")
                except:
                    # –°–ø–æ—Å–æ–± 4: –õ—é–±–∞—è –∫–Ω–æ–ø–∫–∞
                    buttons = driver.find_elements(By.TAG_NAME, "button")
                    print(f"–ù–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–æ–∫: {len(buttons)}")
                    for i, btn in enumerate(buttons):
                        print(f"  –ö–Ω–æ–ø–∫–∞ {i}: —Ç–µ–∫—Å—Ç='{btn.text}', –∫–ª–∞—Å—Å='{btn.get_attribute('class')}'")

                    if buttons:
                        blue_button = buttons[0]
                        print("‚úì –ò—Å–ø–æ–ª—å–∑—É—é –ø–µ—Ä–≤—É—é –∫–Ω–æ–ø–∫—É")
                    else:
                        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–∏")
                        return

        print(f"9. –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏: '{blue_button.text}'")
        print(f"10. –ö–ª–∞—Å—Å—ã –∫–Ω–æ–ø–∫–∏: '{blue_button.get_attribute('class')}'")

        blue_button.click()
        print("11. –ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞!")

        print("üéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù –£–°–ü–ï–®–ù–û!")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

    finally:
        driver.quit()
        print("–ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç")


if __name__ == "__main__":
    test_blue_button()